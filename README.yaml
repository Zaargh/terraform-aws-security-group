---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: terraform-aws-security-group

# Tags of this project
tags:
  - aws
  - security-group
  - terraform
  - terraform-modules

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Copyrights
copyrights:
  - name: "Cloud Posse, LLC"
    url: "https://cloudposse.com"
    year: "2021"

# Canonical GitHub repo
github_repo: cloudposse/terraform-aws-security-group

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/cloudposse/terraform-aws-security-group.svg"
    url: "https://github.com/cloudposse/terraform-aws-security-group/releases/latest"
  - name: "Slack Community"
    image: "https://slack.cloudposse.com/badge.svg"
    url: "https://slack.cloudposse.com"

# List any related terraform modules that this module may be used with or that this module depends on.
related:
  - name: "terraform-null-label"
    description: "Terraform module designed to generate consistent names and tags for resources. Use terraform-null-label to implement a strict naming convention."
    url: "https://github.com/cloudposse/terraform-null-label"

# List any resources helpful for someone to get started. For example, link to the hashicorp documentation or AWS documentation.
references:
  - name: terraform-provider-aws
    description: Terraform AWS provider
    url: https://registry.terraform.io/providers/hashicorp/aws/latest

# Short description of this project
description: |-
  Terraform module to create AWS Security Group and rules.

# Introduction to the project
#introduction: |-
#  This is an introduction.

# How to use this module. Should be an easy example to copy and paste.
usage: |-
  This module is primarily for setting security group rules on a security group. You can provide the
  ID of an existing security group to modify, or, by default, this module will create a new security
  group and apply the given rules to it.

  This module provides 2 ways to set security group rules. The `rules` input takes a list of
  rule maps. The maps are compatible with (have the same keys and accept the same values) the
  Terraform [aws_security_group_rule resource](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule).
  While some of the map keys are optional, Terraform requires that all maps in the list have exactly the same
  set of keys, so if you set, for example `prefix_list_ids` in one rule, you need to include that key in all the maps.
  In rules where the key would othewise be omitted, include the key with value of `null`, unless the value is a list type, in which case
  set the value to `[]` (an empty list).

  The other way to set rules is via the `rule_matrix` input. This splits the keys of the `aws_security_group_rule` resource
  into to sets: one set defines the rule and descripition, the other set defines the subject of the rule. As with
  `rules` and explained in the previous paragraph, all elements of the list must have all the same keys. This also holds
  for all the elements of the `rules_matrix.rules` list.

  The schema for the `rule matrix is:

  ```hcl
  {
    # these top level lists define all the subjects to which rule_matrix rules will be applied
    source_security_group_ids = list of source security group IDs to apply all rules to
    cidr_blocks = list of ipv4 CIDR blocks to apply all rules to
    ipv6_cidr_blocks = list of ipv6 CIDR blocks to apply all rules to
    prefix_list_ids = list of prefix list IDs to apply all rules to
    self = # set "true" to apply the rules to the created or existing security group

    # each rule in the rules list will be applied to every subject defined above
    rules = [{
      type = type of rule, either "ingress" or "egress"
      from_port = start range of protocol port
      to_port = end range of protocol port, max is 65535
      protocol = ip protocol name or number or "all" for all
      description = free form text description of the rule
    }]
  }
  ```

  The way Terraform works and the way this module is implemented causes security group rules
  to be dependent on their place in the input lists. If a rule is deleted and the other rules therefore move
  closer to the start of the list, those rules will be deleted and recreated. This should have no significant
  operational impact, but it can make a small change look like a big one when viewing the output of
  Terraform plan. After careful consideration, we have decided that this is preferable to the
  impositions and limitations that would come from a solution that avoids it.


  ```hcl
  module "label" {
    source = "cloudposse/label/null"
    # Cloud Posse recommends pinning every module to a specific version
    # version = "x.x.x"
    namespace  = "eg"
    stage      = "prod"
    name       = "bastion"
    attributes = ["public"]
    delimiter  = "-"

    tags = {
      "BusinessUnit" = "XYZ",
      "Snapshot"     = "true"
    }
  }

  module "vpc" {
    source = "cloudposse/vpc/aws"
    # Cloud Posse recommends pinning every module to a specific version
    # version = "x.x.x"
    cidr_block = "10.0.0.0/16"

    context = module.label.context
  }

  module "sg" {
    source = "cloudposse/security-group/aws"
    # Cloud Posse recommends pinning every module to a specific version
    # version = "x.x.x"

    # Allow unlimited egress
    allow_all_egress = true

    rules = [
      {
        type        = "ingress"
        from_port   = 22
        to_port     = 22
        protocol    = "tcp"
        cidr_blocks = ["0.0.0.0/0"]
        self        = null
        description = "Allow SSH from anywhere"
      },
      {
        type        = "ingress"
        from_port   = 80
        to_port     = 80
        protocol    = "tcp"
        cidr_blocks = []
        self        = true
        description = "Allow HTTP from inside the security group"
      },
    ]

    context = module.label.context
  }
  ```

# Example usage
examples: |-
  Here is an example of using this module:
  - [`examples/complete`](https://github.com/cloudposse/terraform-aws-security-group/examples/complete) - complete example of using this module

# How to get started quickly
#quickstart: |-
#  Here's how to get started...

# Other files to include in this README from the project folder
include:
  - "docs/targets.md"
  - "docs/terraform.md"

# Contributors to this project
contributors:
  - name: "Erik Osterman"
    github: "osterman"
  - name: "Vladimir"
    github: "SweetOps"
